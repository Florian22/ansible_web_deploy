---
- name: Update apt packages
  become: true
  apt:
    upgrade: yes

- name: Install openvpn & dependencies
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - openvpn
    - openssl
    - easy-rsa

#Clear older certificates
- name: "Remove CA directory {{ ansible_env.HOME }}"
  become: yes
  file:
    state: absent
    path: "{{ ansible_env.HOME }}/openvpn-ca/"

- name: "Create CA dir {{ ansible_env.HOME }}"
  become: yes
  command: make-cadir {{ ansible_env.HOME }}/openvpn-ca

  #Custom easy-rsa configuration
- name: Customize CA variable configuration
  lineinfile:
    dest: "{{ ansible_env.HOME }}/openvpn-ca/vars"
    regexp: "^{{ item.property | regex_escape() }}="
    line: "{{ item.property }}={{ item.value }}"
  with_items:
    - { property: 'export KEY_NAME', value: "{{ EASYRSA_REQ_NAME }}" }
    - { property: 'export KEY_COUNTRY', value: "{{ EASYRSA_REQ_COUNTRY }}" }
    - { property: 'export KEY_PROVINCE', value: "{{ EASYRSA_REQ_PROVINCE }}" }
    - { property: 'export KEY_CITY', value: "{{ EASYRSA_REQ_CITY }}" }
    - { property: 'export KEY_ORG', value: "{{ EASYRSA_REQ_ORG }}" }
    - { property: 'export KEY_EMAIL', value: "{{ EASYRSA_REQ_EMAIL }}" }
    - { property: 'export KEY_OU', value: "{{ EASYRSA_REQ_OU }}" }
    - { property: 'export KEY_DIR', value: '{{ ansible_env.HOME }}/openvpn-ca/keys' }

#Copy from somewhere else

- name: "Build the certificate authority"
  become: yes
  shell: >
    source vars;
    ./clean-all;
    yes "" | ./build-ca;
  args: 
    chdir: "{{ ansible_env.HOME }}/openvpn-ca/"
    executable: /bin/bash

- name: "Build server certificate"
  become: yes
  shell: >
    source vars;
    ./build-key-server --batch server;
  args: 
    chdir: "{{ ansible_env.HOME }}/openvpn-ca/"
    executable: /bin/bash

- name: "Build Diffie-Hellman parameters and key generation"
  become: yes
  shell: >
    source vars;
    yes "" | ./build-dh;
    openvpn --genkey --secret keys/ta.key;
  args: 
    chdir: "{{ ansible_env.HOME }}/openvpn-ca/"
    executable: /bin/bash

- name: "Copy key and certificates to /etc/openvpn"
  become: yes
  copy:
    remote_src: yes
    src: "{{ ansible_env.HOME }}/openvpn-ca/keys/{{ item }}"
    dest: "/etc/openvpn/"
  with_items:
    - "ca.crt"
    - "server.crt"
    - "server.key"
    - "ta.key"
    - "dh2048.pem"

- name: "Generate server.conf from sample config"
  become: yes
  shell: >
     gzip -d -c /usr/share/doc/openvpn/examples/sample-config-files/server.conf.gz | sudo tee /etc/openvpn/server.conf > /dev/null

- name: Adjust OpenVPN server configuration
  lineinfile:
    dest: "/etc/openvpn/server.conf"
    regexp: "^{{ item.regex | regex_escape() }}"
    line: "{{ item.value }}"
  with_items:
    - { regex: ';user nobody', value: 'user nobody' }
    - { regex: ';group nogroup', value: 'group nogroup' }
    - { regex: ';push "redirect-gateway def1 bypass-dhcp"', value: 'push "redirect-gateway def1 bypass-dhcp"' }
    - { regex: 'cert server.crt', value: 'cert server.crt' }
    - { regex: 'key server.key', value: 'key server.key' }

- name: Configuration IP forwarding
  become: true
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    state: present



#end copy


#Start openvpn servce
- name: Start openvpn service
  become: true
  service:
    name: openvpn
    state: started
    enabled: yes
...

